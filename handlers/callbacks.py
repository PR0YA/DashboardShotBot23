import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode

from states.dialog import ScreenshotDialog
from services.image_enhancer import ImageEnhancer

logger = logging.getLogger(__name__)
router = Router()
image_enhancer = ImageEnhancer()

@router.callback_query(lambda c: c.data.startswith("format_"))
async def process_format_selection(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    try:
        format_type = callback.data.split("_")[1]
        logger.info(f"User {callback.from_user.id} selected format: {format_type}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(format=format_type)

        await callback.message.edit_text(
            f"‚úÖ –§–æ—Ä–º–∞—Ç {format_type.upper()} –≤—ã–±—Ä–∞–Ω!\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /screenshot –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞",
            parse_mode=ParseMode.MARKDOWN_V2
        )

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
    except Exception as e:
        logger.error(f"Error in format selection: {e}")
        await callback.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–æ—Ä–º–∞—Ç–∞.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            parse_mode=ParseMode.MARKDOWN_V2
        )

@router.callback_query(F.data == "enhance")
async def process_enhancement(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–ª—É—á—à–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    try:
        await callback.message.edit_text(
            "üîÑ *–£–ª—É—á—à–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...*\n"
            "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ",
            parse_mode=ParseMode.MARKDOWN_V2
        )

        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
        message = callback.message
        if not message.document:
            logger.warning(f"No document found in message for user {callback.from_user.id}")
            await callback.message.edit_text(
                "‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç.",
                parse_mode=ParseMode.MARKDOWN_V2
            )
            return

        file = await callback.bot.get_file(message.document.file_id)
        file_content = await callback.bot.download_file(file.file_path)

        logger.info(f"Enhancing image for user {callback.from_user.id}")
        # –£–ª—É—á—à–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        enhanced_data = image_enhancer.enhance_screenshot(
            file_content.read(),
            clip_limit=1.2,  # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç
            sharpness=3.8    # –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ä–µ–∑–∫–æ—Å—Ç—å
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await message.answer_document(
            document=enhanced_data,
            filename='screenshot_enhanced.png',
            caption=(
                "‚ú® *–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–æ!*\n\n"
                "*–ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:*\n"
                "‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç\n"
                "‚Ä¢ –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è —Ä–µ–∑–∫–æ—Å—Ç—å\n"
                "‚Ä¢ –ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ —à—É–º–∞"
            ),
            parse_mode=ParseMode.MARKDOWN_V2
        )

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

    except Exception as e:
        logger.error(f"Error in enhancement process: {e}")
        await callback.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            parse_mode=ParseMode.MARKDOWN_V2
        )